/**
 * Copyright 2020 David Odari
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *         You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
    compileSdk = 29
    buildTools = "29.0.3"
    minSdk = 21
    targetSdk = 29
    versionCode = 1
    versionName = "1.0"

    //Gradle
    asgpVersion = "4.0.0"

    //Third Party
    apolloVersion = "2.2.0"
    coilVersion = "0.11.0"
    okhttpVersion = "4.7.2"
    lottieVersion = "3.4.0"

    //Kotlin
    kotlinVersion = "1.3.72"
    coroutinesVersion = "1.3.3"

    //Design
    materialVersion = "1.1.0"

    //AndroidX
    appCompatVersion = "1.1.0"
    coreKtxVersion = "1.3.0"
    constraintLayoutVersion = "1.1.3"
    activityKtxVersion = "1.1.0"
    lifecycleVersion = "2.2.0"

    //Unit Testing
    junitVersion = "1.1.1"
    archTestVersion = "1.1.1"
    espressoCoreVersion = "3.2.0"
    coroutinesTestVersion = "1.3.7"
    mockWebServerVersion = "4.7.2"
    robolectricVersion = "4.3"

    kotlinLang = [
            stdlib    : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion",
    ]

    design = [
            material: "com.google.android.material:material:$materialVersion",
    ]

    thirdParty = [
            lottie                  : "com.airbnb.android:lottie:$lottieVersion",
            okhttp                  : "com.squareup.okhttp3:okhttp:$okhttpVersion",
            okhttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
            coil                    : "io.coil-kt:coil:$coilVersion",
            apolloRuntime           : "com.apollographql.apollo:apollo-runtime:$apolloVersion",
            apolloCoroutines        : "com.apollographql.apollo:apollo-coroutines-support:$apolloVersion",
    ]

    gradlePlugins = [
            androidStudio: "com.android.tools.build:gradle:$asgpVersion",
            kotlin       : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
    ]

    androidX = [
            coreKtx         : "androidx.core:core-ktx:$coreKtxVersion",
            appCompat       : "androidx.appcompat:appcompat:$appCompatVersion",
            constraintLayout: "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            activityKtx     : "androidx.activity:activity-ktx:$activityKtxVersion",
            viewmodelKtx    : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
            liveDataKtx     : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion",
    ]

    testing = [
            junit        : "androidx.test.ext:junit:$junitVersion",
            espressoCore : "androidx.test.espresso:espresso-core:$espressoCoreVersion",
            archTest     : "android.arch.core:core-testing:$archTestVersion",
            robolectric  : "org.robolectric:robolectric:$robolectricVersion",
            mockWebServer: "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion",
    ]
}