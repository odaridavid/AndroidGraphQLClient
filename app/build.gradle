/**
 * Copyright 2020 David Odari
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *         You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id("com.apollographql.apollo").version("$apolloVersion")
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
}

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.github.odaridavid.graphql"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versionCode
        versionName versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }

    testOptions.unitTests {
        includeAndroidResources = true
    }

}

dependencies {
    implementation kotlinLang.stdlib
    implementation androidX.coreKtx
    implementation androidX.appCompat
    implementation androidX.constraintLayout
    implementation androidX.activityKtx
    implementation androidX.viewmodelKtx
    implementation androidX.liveDataKtx
    implementation design.material
    implementation thirdParty.apolloRuntime
    implementation thirdParty.apolloCoroutines
    implementation thirdParty.coil
    implementation thirdParty.okhttp
    implementation thirdParty.lottie
    implementation thirdParty.okhttpLoggingInterceptor
    testImplementation testing.junit
    testImplementation testing.mockWebServer
    testImplementation testing.archTest
    testImplementation testing.espressoCore
    testImplementation testing.robolectric
}

apollo {
    generateKotlinModels.set(true)
}